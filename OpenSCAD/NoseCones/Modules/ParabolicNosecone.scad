/* ParabolicNosecone.scad - Generate a 3D parabolic shaped nosecone.
 * 
 * NOTE: The performance, safety, and structural integrity of 3D models 
 *       created using this program are entirely the responsibility of the 
 *       user. 
 * 
 * If 3D printers using PLA, ABS or any other type of low temperature plastic 
 * are used to print any models generated by this program, keep in mind that 
 * these plastics, especially PLA, become very weak at relatively low 
 * temperatures, temperatures as low as the interior of a sunlit car. Even 
 * with this in mind, any 3D printed items printed using low temperature 3D 
 * printer plastics are intended for use in low power rocketry only and
 * should be printed with a high internal fill and high wall thickness 
 * settings (set by the 3D printer application).
 * 
 * Some primers and paints can weaken common 3D printed plastics. Do your 
 * research before using primers and paints!
 * 
 * If models are printed for mid and high power rocketry applications they 
 * should only serve as formers for fiberglass or carbon fiber layup. I have 
 * no idea how well PLA or ABS stand up to mold release agents or how well 
 * they will adhere to the fiberglass or carbon fiber if the 3D printed model 
 * is not extracted and is instead left in place.
 * 
 * If there's anything I've said above you don't understand, you shouldn't be 
 * creating parts with this program for rockets you intend to fly.
 *
 *
 * All dimensions should be in MILLIMETERS
 *
 *
 * Created by Unknown
 * Created on Unknown
 * 
 * Modified by ASmelser
 * Modified on 12-28-2021
 */

// Leave these alone
$fn = 0;
$fa = 0.01;

// Render quality setting
$fs = 0.3;  // * range: 2 (coarse) to 0.3 (fine)

parabolic_nosecone();


module parabolic_nosecone(k=1, shld_len=35, shld_dia=28.8, anc_dep=25, anc_dia=12.5, body_dia=30.8, ar=5, num_faces=400) {
	/* Parabolic Nose Cone Generator
	 *
	 * All dimensions should be given in millimeters.
	 *
	 * Inputs
	 *   k        : Parabolic series selection. For conical set k = 0; 
	 *              for 1/2 Parabola set k = 1/2; for 3/4 parabola set k = 3/4; 
	 *              for parabola (tangent base) set k = 1.
	 *   shld_len : shoulder length
	 *   shld_dia : shoulder diameter
	 *   anc_dep  : anchor hole depth
	 *   anc_dia  : anchor hole diameter
	 *   body_dia : body base diameter
	 *   ar       : body aspect ratio (Length/Diameter)
	 *   num_faces: Number of longitudinal faces to calculate. Finer resolution with larger number.
	 */
	// Build nosecone shoulder
	translate ([0, 0, -shld_len])
	difference(){
		cylinder (h=shld_len, r=shld_dia/2);  // create shoulder
		cylinder (h=anc_dep, r=anc_dia/2);  // create anchor hole
	}

	// Build nosecone body
	body_len = body_dia*ar;  // body length
	body_rad = body_dia/2;  // body base radius
	function y(x) = body_rad*(2*x/body_len - k*pow(x/body_len, 2))/(2 - k);
	ply_pts = concat([[0, 0]],[for (i=[0:num_faces]) let (x=(i*body_len/num_faces))[y(body_len - x), x]]);
	rotate_extrude() polygon(points=ply_pts);
}
